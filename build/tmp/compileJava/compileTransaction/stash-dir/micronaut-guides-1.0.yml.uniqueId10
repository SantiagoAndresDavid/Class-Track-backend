openapi: 3.0.1
info:
  title: micronaut-guides
  version: "1.0"
paths:
  /Notification/create:
    post:
      tags:
      - Notification
      operationId: createNotification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationSaveRequest"
        required: true
      responses:
        "200":
          description: createNotification 200 response
          content:
            application/json:
              schema:
                type: string
  /attendance/save:
    post:
      tags:
      - Attendance
      operationId: saveAttendance
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                attendanceSaveRequest:
                  $ref: "#/components/schemas/AttendanceSaveRequest"
        required: true
      responses:
        "200":
          description: saveAttendance 200 response
          content:
            application/json:
              schema:
                type: string
  /grade/save:
    post:
      tags:
      - Grade
      operationId: saveClass
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GradeSaveRequest"
        required: true
      responses:
        "200":
          description: saveClass 200 response
          content:
            application/json:
              schema:
                type: string
  /healthCheck/get:
    get:
      tags:
      - healthCheck
      operationId: healthCheck
      responses:
        "200":
          description: healthCheck 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /roles/get-porgrby-id:
    get:
      tags:
      - roles
      operationId: getRole
      responses:
        "200":
          description: getRole 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
  /roles/getAll:
    get:
      tags:
      - roles
      operationId: getAllRoles
      responses:
        "200":
          description: getAllRoles 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
  /roles/save:
    post:
      tags:
      - roles
      operationId: saveRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleSaveRequest"
        required: true
      responses:
        "200":
          description: saveRole 200 response
          content:
            application/json:
              schema:
                type: string
  /users/add-grade:
    put:
      tags:
      - Users
      operationId: updateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddGradeToUserRequest"
        required: true
      responses:
        "200":
          description: updateUser 200 response
          content:
            application/json:
              schema:
                type: string
  /users/get-all:
    get:
      tags:
      - Users
      operationId: singIn
      responses:
        "200":
          description: singIn 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /users/save:
    post:
      tags:
      - Users
      operationId: saveUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserSaveRequest"
        required: true
      responses:
        "200":
          description: saveUser 200 response
          content:
            application/json:
              schema:
                type: string
  /users/sign-in:
    get:
      tags:
      - Users
      operationId: singIn_1
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: singIn_1 200 response
          content:
            application/json:
              schema:
                type: boolean
  /users/{id}:
    get:
      tags:
      - Users
      operationId: getUserByEmail
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getUserByEmail 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
components:
  schemas:
    AddGradeToUserRequest:
      required:
      - grades
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        grades:
          type: array
          items:
            $ref: "#/components/schemas/GradeId"
    AttendanceGradeIdRequest:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    AttendanceSaveRequest:
      required:
      - attendanceDate
      - gradeId
      - users
      type: object
      properties:
        users:
          type: array
          items:
            $ref: "#/components/schemas/AttendanceUserIdRequest"
        gradeId:
          $ref: "#/components/schemas/AttendanceGradeIdRequest"
        attendanceDate:
          type: string
          format: date
    AttendanceUserIdRequest:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    Grade:
      required:
      - finalDate
      - initialDate
      - name
      - statistic
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        initialDate:
          type: string
          format: date-time
        finalDate:
          type: string
          format: date-time
        notifications:
          type: array
          items:
            $ref: "#/components/schemas/Notification"
        statistic:
          $ref: "#/components/schemas/Statistic"
    GradeId:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    GradeSaveRequest:
      required:
      - finalDate
      - initialDate
      - name
      - statisticGradeRequest
      type: object
      properties:
        name:
          type: string
        initialDate:
          type: string
          format: date-time
        finalDate:
          type: string
          format: date-time
        statisticGradeRequest:
          $ref: "#/components/schemas/GradeSaveRequest.StatisticGradeRequest"
    GradeSaveRequest.StatisticGradeRequest:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    Notification:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    NotificationSaveRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    Role:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    RoleSaveRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    Statistic:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    User:
      required:
      - email
      - name
      - password
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        grades:
          type: array
          items:
            $ref: "#/components/schemas/Grade"
    UserSaveRequest:
      required:
      - email
      - name
      - password
      - roles
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            $ref: "#/components/schemas/UserSaveRequest.RoleUserRequest"
    UserSaveRequest.RoleUserRequest:
      required:
      - id
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
