openapi: 3.0.1
info:
  title: micronaut-guides
  version: "1.0"
paths:
  /class/save:
    post:
      tags:
      - class
      operationId: saveClass
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Class"
        required: true
      responses:
        "200":
          description: saveClass 200 response
          content:
            application/json:
              schema:
                type: string
  /healthCheck/get:
    get:
      tags:
      - healthCheck
      operationId: healthCheck
      responses:
        "200":
          description: healthCheck 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
  /roles/getAll:
    get:
      tags:
      - roles
      operationId: getAllRoles
      responses:
        "200":
          description: getAllRoles 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
  /roles/save:
    post:
      tags:
      - roles
      operationId: saveRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
        required: true
      responses:
        "200":
          description: saveRole 200 response
          content:
            application/json:
              schema:
                type: string
  /users/save:
    post:
      tags:
      - Users
      operationId: saveUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: saveUser 200 response
          content:
            application/json:
              schema:
                type: string
  /users/sign-in:
    get:
      tags:
      - Users
      operationId: singIn
      parameters:
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: singIn 200 response
          content:
            application/json:
              schema:
                type: boolean
  /users/{email}:
    get:
      tags:
      - Users
      operationId: getUserByEmail
      parameters:
      - name: email
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getUserByEmail 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
components:
  schemas:
    Class:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Role:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        email:
          type: string
        password:
          type: string
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
        classes:
          type: array
          items:
            $ref: "#/components/schemas/Class"
